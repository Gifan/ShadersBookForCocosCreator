{
  "ver": "1.0.15",
  "uuid": "a4882f7c-f03c-4222-b46b-f2a9aea08a83",
  "compiledShaders": [
    {
      "vert": "\n#define _IS_VERT_SHADER 1\n\nprecision highp float;\n\nuniform mat4 cc_matViewProj;\n\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\n\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\n\nvoid main () {\n  mat4 mvp;\n  \n  mvp = cc_matViewProj;\n  \n  v_uv0 = a_uv0;\n  v_color = a_color;\n\n  gl_Position = mvp * vec4(a_position, 1);\n}\n\n\n",
      "frag": "\n#define _IS_FRAG_SHADER 1\n\nprecision mediump float;\n\n#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\nuniform sampler2D texture;\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\n\nvec2 random2(vec2 p) {\n  return fract(sin(vec2(dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nvoid main () {\n  vec2 st = gl_FragCoord.xy / u_resolution;\n  st.x *= u_resolution.x / u_resolution.y;\n  vec3 color = vec3(.0);\n  \n\n  \n  st *= 3.;\n\n  \n  vec2 i_st = floor(st);\n  vec2 f_st = fract(st);\n  \n  float m_dist = 1.;\n\n  for (int y=-1; y<=1; y++) {\n    for (int x=-1; x<=1; x++) {\n      \n      vec2 neighbor = vec2(float(x),float(y));\n      \n      vec2 point = random2(i_st+neighbor);\n\n      \n      point = 0.5 + 0.5*sin(u_time+6.2831*point);\n\n      \n      vec2 diff = neighbor + point - f_st;\n\n      \n      float dist = length(diff);\n\n      \n      m_dist = min(m_dist, dist);\n    }\n  }\n\n  \n  color += m_dist;\n\n  \n  color += 1. - step(.02, m_dist);\n\n  \n  color.r += step(.98, f_st.x) + step(.98, f_st.y);\n\n  \n  \n\n  gl_FragColor = vec4(color, 1.0);\n}\n\n\n"
    }
  ],
  "subMetas": {}
}
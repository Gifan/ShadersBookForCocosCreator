{
  "ver": "1.0.15",
  "uuid": "b3de4406-7a85-439e-93d4-890dbedf0450",
  "compiledShaders": [
    {
      "vert": "\n#define _IS_VERT_SHADER 1\n\nprecision highp float;\n\nuniform mat4 cc_matViewProj;\n\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\n\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\n\nvoid main () {\n  mat4 mvp;\n  \n  mvp = cc_matViewProj;\n  \n  v_uv0 = a_uv0;\n  v_color = a_color;\n\n  gl_Position = mvp * vec4(a_position, 1);\n}\n\n\n",
      "frag": "\n#define _IS_FRAG_SHADER 1\n\nprecision mediump float;\n\n#define TWO_PI 6.28318530718\n\nuniform sampler2D texture;\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\n\nvec3 hsb2rgb(vec3 c) {\n  vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0);\n  rgb = rgb*rgb*(3.0-2.0*rgb);\n  return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvoid main () {\n  vec2 st = gl_FragCoord.xy / u_resolution;\n  vec3 color = vec3(0.0);\n\n  \n  vec2 toCenter = vec2(0.5) - st;\n  float angle = atan(toCenter.y, toCenter.x);\n  float radius = length(toCenter) * 2.0;\n\n  \n  \n  color = hsb2rgb(vec3((angle/TWO_PI)+0.5, radius, 1.0));\n  \n  gl_FragColor = vec4(color, 1.0);\n}\n\n\n"
    }
  ],
  "subMetas": {}
}
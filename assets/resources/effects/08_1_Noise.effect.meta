{
  "ver": "1.0.15",
  "uuid": "db0d3fa4-0dfb-4e52-810b-0694b5f8459c",
  "compiledShaders": [
    {
      "vert": "\n#define _IS_VERT_SHADER 1\n\nprecision highp float;\n\nuniform mat4 cc_matViewProj;\n\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\n\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\n\nvoid main () {\n  mat4 mvp;\n  \n  mvp = cc_matViewProj;\n  \n  v_uv0 = a_uv0;\n  v_color = a_color;\n\n  gl_Position = mvp * vec4(a_position, 1);\n}\n\n\n",
      "frag": "\n#define _IS_FRAG_SHADER 1\n\nprecision mediump float;\n\n#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\nuniform sampler2D texture;\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\n\nfloat random(vec2 st) {\n  return fract(sin(dot(st.xy, vec2(12.9898,78.233)))*43758.5453123);\n}\n\nfloat noise(vec2 st) {\n  vec2 i = floor(st);\n  vec2 f = fract(st);\n\n  \n  float a = random(i);\n  float b = random(i+vec2(1.0,0.0));\n  float c = random(i+vec2(0.0,1.0));\n  float d = random(i+vec2(1.0,1.0));\n\n  \n  vec2 u = f*f*(3.0-2.0*f);\n  \n\n  \n  return mix(a, b, u.x) + (c-a)*u.y*(1.0-u.x)+(d-b)*u.x*u.y;\n}\n\nvoid main () {\n  vec2 st = gl_FragCoord.xy / u_resolution;\n\n  \n  vec2 pos = vec2(st*5.0+sin(u_time)); \n\n  \n  float n = noise(pos);\n\n  gl_FragColor = vec4(vec3(n), 1.0);\n}\n\n\n"
    }
  ],
  "subMetas": {}
}
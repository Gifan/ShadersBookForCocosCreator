{
  "ver": "1.0.15",
  "uuid": "f429bafd-4d4c-41b3-9ad4-707d590352ad",
  "compiledShaders": [
    {
      "vert": "\n#define _IS_VERT_SHADER 1\n\nprecision highp float;\n\nuniform mat4 cc_matViewProj;\n\nattribute vec3 a_position;\nattribute lowp vec4 a_color;\nattribute mediump vec2 a_uv0;\n\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\n\nvoid main () {\n  mat4 mvp;\n  \n  mvp = cc_matViewProj;\n  \n  v_uv0 = a_uv0;\n  v_color = a_color;\n\n  gl_Position = mvp * vec4(a_position, 1);\n}\n\n\n",
      "frag": "\n#define _IS_FRAG_SHADER 1\n\nprecision mediump float;\n\n#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\nuniform sampler2D texture;\nuniform vec2 u_resolution;\nuniform float u_time;\n\nvarying mediump vec2 v_uv0;\nvarying lowp vec4 v_color;\n\nmat2 scale(vec2 _scale) {\n  return mat2(_scale.x, 0., 0., _scale.y);\n}\n\nfloat box(vec2 _st, vec2 _size) {\n  _size = vec2(0.5) - _size*0.5;\n  vec2 uv = smoothstep(_size, _size+vec2(0.001), _st);\n  uv *= smoothstep(_size, _size+vec2(0.001), vec2(1.0)-_st);\n  return uv.x*uv.y;\n}\n\nfloat cross(vec2 _st, float _size) {\n  return box(_st, vec2(_size, _size/4.)) + box(_st, vec2(_size/4.,_size));\n}\n\nvoid main () {\n  vec2 st = gl_FragCoord.xy / u_resolution;\n  vec3 color = vec3(0.0);\n  \n  st -= vec2(0.5);\n  st = scale(vec2(sin(u_time)+1.0)) * st;\n  st += vec2(0.5);\n\n  \n  color = vec3(st.x, st.y, 0.0);\n\n  \n  color += vec3(cross(st, 0.2));\n\n  gl_FragColor = vec4(color, 1.0);\n}\n\n\n"
    }
  ],
  "subMetas": {}
}